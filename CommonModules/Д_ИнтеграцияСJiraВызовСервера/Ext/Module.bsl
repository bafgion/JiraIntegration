Функция ПолучитьСтруктуруМетаданных(ДокументСправочникСсылка) Экспорт
	
	СтруктураМетаданных = Новый Структура();
	
	ТипЗначения = ТипЗнч(ДокументСправочникСсылка);
	ИмяОбъекта = Метаданные.НайтиПоТипу(ТипЗначения).ПолноеИмя();
	МассивРазделения = СтрРазделить(ИмяОбъекта, ".");
	
	СтруктураМетаданных.Вставить("ТипДокумента", МассивРазделения[0]);
	СтруктураМетаданных.Вставить("ИмяДокумента", МассивРазделения[1]);
		
	Возврат СтруктураМетаданных;
	
КонецФункции

Функция ПолучитьКоличествоПараметровДляСопоставления(ШаблонJSON) Экспорт
	
	ИндексПараметра = 0;
	ПродолжатьПоиск = Истина;
	
	Пока ПродолжатьПоиск Цикл
		
		ИндексПараметра = ИндексПараметра + 1;
		ИмяПараметра = "#Параметр" + Строка(ИндексПараметра) + "#";
		
		Если СтрНайти(ШаблонJSON, ИмяПараметра) = 0 Тогда
			ПродолжатьПоиск = Ложь;
			ИндексПараметра = ИндексПараметра - 1;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ИндексПараметра;
	
КонецФункции

Функция СформироватьСтандартныйШаблонЗапроса(ШаблонJSON, ДанныеОбъекта) Экспорт
	
	КоличествоСтрок = ПолучитьКоличествоПараметровДляСопоставления(ШаблонJSON);
	ТекстЗапроса = "ВЫБРАТЬ";
	
	Для Счетчик = 1 По КоличествоСтрок Цикл
		ИмяПараметра = "#Параметр" + Строка(Счетчик) + "#";
		ШаблонСтрокиЗапроса = ?(Счетчик = КоличествоСтрок, " 	%1.%2 КАК %2", " 	%1.%2 КАК %2,");
		ТекстЗапроса = ТекстЗапроса + Символы.ПС + СтрШаблон(ШаблонСтрокиЗапроса, ДанныеОбъекта.ИмяОбъекта, ИмяПараметра);
	КонецЦикла;
	
	ШаблонОкончанияЗапроса = "ИЗ
	|	%1.%2 КАК %2
	|	%2.Ссылка = &Ссылка";
	ТекстЗапроса = ТекстЗапроса + Символы.ПС + СтрШаблон(ШаблонОкончанияЗапроса, ДанныеОбъекта.ТипОбъекта, ДанныеОбъекта.ИмяОбъекта);
	
	Возврат ТекстЗапроса;
	
КонецФункции

// В данный момент при указании первым типом запроса GET вызовет все остальные типы запросов,
// которые имеются для данного объекта.
//
Функция НазначенныеТипыЗапросовПоОбъекту(СсылкаНаОбъект) Экспорт
	
	МассивТиповЗапросаПоОбъекту = Новый Массив();
	
	Если ТипЗнч(СсылкаНаОбъект) = Тип("ДокументСсылка.РБТ_ЗаявкаНаКомандировку") Тогда
		МассивТиповЗапросаПоОбъекту.Добавить(Перечисления.Д_ТипыЗапросов.GET);
	КонецЕсли;
	
	Возврат МассивТиповЗапросаПоОбъекту;
	
КонецФункции

Функция ПолучитьСопоставленныеПараметры(ПараметрыЗапроса) Экспорт
	
	МассивПараметровСопоставления = Новый Массив();
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	Д_НастройкиШаблоновОтправки.UIDЗаписи КАК UIDЗаписи
	|ПОМЕСТИТЬ ВременнаяТаблица
	|ИЗ
	|	РегистрСведений.Д_НастройкиШаблоновОтправки КАК Д_НастройкиШаблоновОтправки
	|ГДЕ
	|	Д_НастройкиШаблоновОтправки.ТипОбъекта.Ссылка = &ТипОбъекта
	|	И Д_НастройкиШаблоновОтправки.ТипЗапроса.Ссылка = &ТипЗапроса
	|	И Д_НастройкиШаблоновОтправки.ИмяОбъекта = &ИмяОбъекта
	|	И Д_НастройкиШаблоновОтправки.ВызываемыйМетод = &ВызываемыйМетод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Д_СопоставлениеПолейЗапросовСопоставленныеПараметры.Параметр КАК Параметр,
	|	Д_СопоставлениеПолейЗапросовСопоставленныеПараметры.СопоставленноеЗначение КАК СопоставленноеЗначение
	|ИЗ
	|	Справочник.Д_СопоставлениеПолейЗапросов.СопоставленныеПараметры КАК Д_СопоставлениеПолейЗапросовСопоставленныеПараметры
	|ГДЕ
	|	Д_СопоставлениеПолейЗапросовСопоставленныеПараметры.Ссылка.GUIDЗаписи В
	|			(ВЫБРАТЬ
	|				ВременнаяТаблица.UIDЗаписи КАК UIDЗаписи
	|			ИЗ
	|				ВременнаяТаблица КАК ВременнаяТаблица)";
	Запрос.УстановитьПараметр("ТипОбъекта", ПараметрыЗапроса.ТипОбъекта);
	Запрос.УстановитьПараметр("ТипЗапроса", ПараметрыЗапроса.ТипЗапроса);
	Запрос.УстановитьПараметр("ИмяОбъекта", ПараметрыЗапроса.ИмяОбъекта);
	Запрос.УстановитьПараметр("ВызываемыйМетод", ПараметрыЗапроса.ВызываемыйМетод);
	
	ТаблицаСоответствий = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаСоответствий.Количество() > 0 Тогда
		МассивПараметровСопоставления = ОбщегоНазначения.ТаблицаЗначенийВМассив(ТаблицаСоответствий);
	Иначе
		ВызватьИсключение НСтр("ru = 'Отправка данных не может быть выполнена по причине:
							| Не существует записи сопоставления параметров.'");
	КонецЕсли;
		
	Возврат МассивПараметровСопоставления;
	
КонецФункции